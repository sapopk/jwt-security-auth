spring:
  application:
    name: jwt-security-auth
  config:
    import:
      - optional:classpath:config/jwtsecret.properties
      - optional:classpath:config/logger.properties
      - optional:classpath:config/jpaconfig.properties
      - optional:classpath:config/postgresql.properties
    show-sql: ${JPA_SHOW_SQL}
  datasource:
    url: jdbc:postgresql://postgresdb:${POSTGRESQL_LOCAL_PORT}/${POSTGRESQL_ROOT_DATABASE}
    username: ${POSTGRESQL_ROOT_USERNAME}
    password: ${POSTGRESQL_ROOT_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: ${HIBERNATE_DDL_AUTO}
    properties:
      hibernate:
        formate_sql: ${JPA_HIBERNATE_FORMAT_SQL}
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect

server:
  port: ${SPRING_LOCAL_PORT}

logging:
  pattern:
    console: ${LOGGER_COMMANDS}
  level:
    org:
      springframework.web: ${LOGGER_LEVEL}
      springframework.web.reactive.function.client.WebClient: ${LOGGER_LEVEL}
      springframework.security: ${LOGGER_LEVEL}
      springframework.security.web.csrf: ${LOGGER_LEVEL}
      apache.tomcat.util.http.parser.Cookie: ${LOGGER_LEVEL}

security:
  jwt:
    token:
      secret-key: ${JWT_SECRET}
      access-token-expiration: ${ACCESS_TOKEN_EXPIRATION}
      refresh-token-expiration: ${REFRESH_TOKEN_EXPIRATION}